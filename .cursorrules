# Go Dashboard Project

## Project Context
- Terminal UI dashboard using Bubbletea and Lipgloss
- Integrates with Godo for todo management
  - Uses Godo's Todo model:
    ```go
    type Todo struct {
        ID        string    `json:"id"`
        Content   string    `json:"content"`
        Done      bool      `json:"done"`
        CreatedAt time.Time `json:"created_at"`
        UpdatedAt time.Time `json:"updated_at"`
    }
    ```
  - Supports basic operations: create, toggle, update
  - Uses UUID for unique identification
  - Tracks creation and update timestamps
- Follows standard Go project layout
- Uses Wire for dependency injection
- Uses Zap for structured logging

## Lifecycle Management
- Use Bubbletea's built-in lifecycle management
  - Signal handling (SIGINT, SIGTERM)
  - Key event handling (q, ctrl+c)
  - Terminal cleanup
- No custom signal handlers needed
  - Bubbletea handles graceful shutdown
  - Terminal restoration on exit
  - Event propagation to components
- Cleanup responsibilities:
  - Logger: Flush on exit
  - UI: Handled by Bubbletea
  - Terminal: Restored by Bubbletea
  - Components: Use Init/Update for setup/teardown

## Code Style
- Follow standard Go conventions
- Use gofmt for formatting
- Apply golangci-lint rules
- Use constants for magic numbers
- Document all exported symbols

## Deprecation Handling
- Always use latest non-deprecated API methods
- Update code when deprecation notices appear
- Document any temporary use of deprecated features
- Examples:
  - Use p.Run() instead of p.Start() for Bubbletea programs
  - Check go.dev for latest API changes

## Dependency Management
- Use wire for dependency injection
  - Generate wire_gen.go for each package
  - Keep providers in providers.go
  - Define interfaces in interfaces.go
- Prefer constructor injection over field injection
- Use interfaces for external dependencies
- Run wire before builds and tests

## Logging
- Use uber-go/zap for logging
  - Structured logging only
  - No global logger instances
  - Log levels: debug, info, warn, error
  - Include request ID in all logs
- Configure log rotation
- Inject logger through wire
- Use context for request tracking
- Testing:
  - Use testutil.NewTestLogger for tests
  - Use testutil.ReadLogFile for log verification
  - Clean up log files after tests

## UI Components
- Use Bubbletea for terminal UI
- Use Lipgloss for styling
  - Cache styles for performance
  - Use consistent color scheme
  - Support light/dark themes
- Widget System
  - Grid-based layout
  - Focus management
  - Keyboard navigation
  - Minimum size constraints
  - Content caching
  - Style caching

## Performance
- Cache rendered content
- Cache styles
- Pre-render static content
- Minimize allocations
- Use string builders
- Implement dirty region tracking
- Target metrics:
  - View rendering < 1ms
  - Memory allocations < 1KB/op
  - CPU usage < 5%

## Testing
- Use table-driven tests
- Mock external dependencies
- Test both success and error paths
- Add benchmark tests
- Coverage > 80%
- Test all UI components
- Test layout system
- Test focus management

## Documentation
- Document all exported symbols
- Add package documentation
- Include examples
- Keep line length < 100
- Document configuration
- Add usage examples

## Error Handling
- Return errors, don't panic
- Use error wrapping
- Log errors with context
- Provide user feedback
- Handle edge cases
- Validate inputs

## File Organization
- /cmd - Main applications
- /internal - Private packages
- /pkg - Public packages
- /docs - Documentation
- /test - Test utilities
- /scripts - Build scripts
- /configs - Configuration files

## Linting Rules

# Depguard rules
depguard:
  list-type: denylist
  packages:
    - fmt
  packages-with-error-message:
    - fmt: "use logger package for output in dashboard"
  ignore-files:
    - "*_test.go"
    - "cmd/dashboard/main.go"
    - "internal/logger/*.go"

# Test rules
test:
  rules:
    - id: use-testutil-logger
      pattern: "setupTestLogger"
      message: "use testutil.NewTestLogger instead of local setupTestLogger functions"
      severity: error
      languages: [go]
      paths:
        include: ["**/*_test.go"] 