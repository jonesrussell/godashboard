name: Build and Test

on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/go.yml'
      - 'Taskfile.yml'
  pull_request:
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/go.yml'
      - 'Taskfile.yml'

env:
  IS_LOCAL: ${{ github.env.ACT }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      - uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      - name: Run tests
        run: |
          mkdir -p coverage
          go test -race -coverprofile=coverage/coverage.out -covermode=atomic ./...
          go tool cover -html=coverage/coverage.out -o coverage/coverage.html
      - name: Upload coverage
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          compression-level: 9

  build:
    needs: [lint]
    if: always()
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            artifact: godashboard
            cc: gcc
            deps: gcc
            cgo: "0"
          - os: windows
            arch: amd64
            artifact: godashboard.exe
            cc: x86_64-w64-mingw32-gcc
            deps: mingw-w64
            cgo: "1"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.deps }}

      - name: Generate Wire code
        run: |
          go install github.com/google/wire/cmd/wire@latest
          wire ./cmd/dashboard

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CC: ${{ matrix.cc }}
          CGO_ENABLED: ${{ matrix.cgo }}
        run: |
          chmod +x scripts/build.sh
          ./scripts/build.sh build dashboard

      - name: Upload artifact
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: godashboard-${{ github.sha }}-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            build/${{ matrix.os }}_${{ matrix.arch }}/bin/${{ matrix.artifact }}
            build/${{ matrix.os }}_${{ matrix.arch }}/docs/
            build/${{ matrix.os }}_${{ matrix.arch }}/LICENSE
            build/${{ matrix.os }}_${{ matrix.arch }}/README.md
          compression-level: 9 